  [h1]Welcome to your VS Code Extension[/h1]
[h2]What&apos;s in the folder[/h2]

[list]
[*]This folder contains all of the files necessary for your extension.

[*][code]package.json[/code] - this is the manifest file in which you declare your extension and command.


[list]
[*]The sample plugin registers a command and defines its title and command name. With this information VS Code can show the command in the command palette. It doesn&#x2019;t yet need to load the plugin.

[/list]




[*][code]src/extension.ts[/code] - this is the main file where you will provide the implementation of your command.


[list]
[*]The file exports one function, [code]activate[/code], which is called the very first time your extension is activated (in this case by executing the command). Inside the [code]activate[/code] function we call [code]registerCommand[/code].

[*]We pass the function containing the implementation of the command as the second parameter to [code]registerCommand[/code].

[/list]




[/list]

[h3]Setup[/h3]

[list]
[*]install the recommended extensions (amodio.tsl-problem-matcher and dbaeumer.vscode-eslint)

[/list]

[h2]Get up and running straight away[/h2]

[list]
[*]Press [code]F5[/code] to open a new window with your extension loaded.

[*]Run your command from the command palette by pressing ([code]Ctrl+Shift+P[/code] or [code]Cmd+Shift+P[/code] on Mac) and typing [code]Hello World[/code].

[*]Set breakpoints in your code inside [code]src/extension.ts[/code] to debug your extension.

[*]Find output from your extension in the debug console.

[/list]

[h2]Make changes[/h2]

[list]
[*]You can relaunch the extension from the debug toolbar after changing code in [code]src/extension.ts[/code].

[*]You can also reload ([code]Ctrl+R[/code] or [code]Cmd+R[/code] on Mac) the VS Code window with your extension to load your changes.

[/list]

[h2]Explore the API[/h2]

[list]
[*]You can open the full set of our API when you open the file [code]node_modules/@types/vscode/index.d.ts[/code].

[/list]

[h2]Run tests[/h2]

[list]
[*]Open the debug viewlet ([code]Ctrl+Shift+D[/code] or [code]Cmd+Shift+D[/code] on Mac) and from the launch configuration dropdown pick [code]Extension Tests[/code].

[*]Press [code]F5[/code] to run the tests in a new window with your extension loaded.

[*]See the output of the test result in the debug console.

[*]Make changes to [code]src/test/suite/extension.test.ts[/code] or create new test files inside the [code]test/suite[/code] folder.


[list]
[*]The provided test runner will only consider files matching the name pattern [code]**.test.ts[/code].

[*]You can create folders inside the [code]test[/code] folder to structure your tests any way you want.

[/list]




[/list]

[h2]Go further[/h2]

[list]
[*]Reduce the extension size and improve the startup time by [url=https://code.visualstudio.com/api/working-with-extensions/bundling-extension]bundling your extension[/url].

[*][url=https://code.visualstudio.com/api/working-with-extensions/publishing-extension]Publish your extension[/url] on the VS Code extension marketplace.

[*]Automate builds by setting up [url=https://code.visualstudio.com/api/working-with-extensions/continuous-integration]Continuous Integration[/url].

[/list]


[table]
[th]
[tr]
[th]Left align[/th]
[th]Center align[/th]
[th]Right align[/th]
[/tr]

[tr]
[td]left[/td]
[td]right[/td]
[td]center[/td]
[/tr]
[tr]
[td]aligned[/td]
[td]aligned[/td]
[td]aligned[/td]
[/tr]

[/table] 

[list]
[*][url=#welcome-to-your-vs-code-extension]Welcome to your VS Code Extension[/url]


[list]
[*][url=#whats-in-the-folder]What&apos;s in the folder[/url]


[list]
[*][url=#setup]Setup[/url]

[/list]




[*][url=#get-up-and-running-straight-away]Get up and running straight away[/url]

[*][url=#make-changes]Make changes[/url]

[*][url=#explore-the-api]Explore the API[/url]

[*][url=#run-tests]Run tests[/url]

[*][url=#go-further]Go further[/url]

[/list]




[/list]


 
 